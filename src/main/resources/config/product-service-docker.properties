# Application Configuration
spring.application.name=product-service
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://database:5432/ManufacturasArcosDB
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Eureka Configuration - More explicit for Docker
eureka.client.serviceUrl.defaultZone=http://eurekaserver:8070/eureka/
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

# IMPORTANT: Configure instance properly for Docker
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:product-service}
eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.preferIpAddress=false
eureka.instance.statusPageUrlPath=/actuator/info
eureka.instance.healthCheckUrlPath=/actuator/health
eureka.instance.leaseRenewalIntervalInSeconds=30
eureka.instance.leaseExpirationDurationInSeconds=90

# Management Endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always